[project]
name = "smartcard-management-tool"
version = "1.0.0"
description = "A comprehensive Python tool for managing smartcards through PC/SC readers"
authors = [
    {name = "CCM Tool Developer", email = "developer@example.com"}
]
dependencies = [
    "pyscard>=2.0.7",
    "cryptography>=41.0.7", 
    "click>=8.1.7",
    "colorama>=0.4.6",
    "tabulate>=0.9.0",
    "pyyaml>=6.0.1",
    "matplotlib>=3.8.2",
    "networkx>=3.2.1",
    "customtkinter>=5.2.0",
    "pillow>=10.0.0",
    "tkinter-tooltip>=2.0.0",
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["smartcard", "pcsc", "globalplatform", "security-domain", "scp02", "scp03"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "Topic :: Security :: Cryptography",
    "Topic :: System :: Hardware",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=4.0", 
    "mypy>=0.900",
]

[project.scripts]
ccm-tool = "ccm_tool:cli"
ccm-gui = "gui_app:main"

[project.urls]
Homepage = "https://github.com/username/smartcard-management-tool"
"Bug Reports" = "https://github.com/username/smartcard-management-tool/issues"
"Source" = "https://github.com/username/smartcard-management-tool"
"Documentation" = "https://github.com/username/smartcard-management-tool/wiki"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
